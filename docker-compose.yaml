services:
  deep-trace-db:
    image: ankane/pgvector:latest
    restart: always
    command: ["postgres", "-c", "log_statement=all"]
    ports:
      - 5432:5432
    environment:
      - DATABASE_HOST=deep-trace-db
      - DATABASE_NAME=deep_trace
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=deep_trace
      - PGDATA=/data/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d deep_trace"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - deep-trace-network

  migrations:
    build:
      context: .
      target: dev
    depends_on:
      deep-trace-db:
        condition: service_healthy
    environment:
      - DATABASE_HOST=deep-trace-db
      - DATABASE_NAME=deep_trace
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_PORT=5432
    volumes:
      - ./alembic:/app/alembic
      - ./src:/app/src
      - ./alembic.ini:/app/alembic.ini
    command: ["/bin/sh", "-c", "/app/.venv/bin/alembic upgrade head"]
    networks:
      - deep-trace-network

  deep-trace:
    build:
      context: .
      target: dev
    restart: always
    depends_on:
      deep-trace-db:
        condition: service_healthy
    ports:
      - 8000:8000
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@deep-trace-db:5432/deep_trace
      - DATABASE_HOST=deep-trace-db
      - DATABASE_NAME=deep_trace
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_PORT=5432
      - API_PORT=8000
      - ENVIRONMENT=dev
    networks:
      - deep-trace-network
    volumes:
      - ./src:/app/src
    command:
      [
        "/bin/sh",
        "-c",
        "/app/.venv/bin/fastapi dev /app/src/deep_trace/api.py --host 0.0.0.0",
      ]

volumes:
  pgdata:

networks:
  deep-trace-network:
    driver: bridge
